"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getXataClient = exports.XataClient = void 0;
// Generated by Xata Codegen 0.29.4. Please do not edit.
const client_1 = require("@xata.io/client");
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "countries",
    columns: [
      { name: "Name", type: "text" },
      { name: "Code", type: "string" },
    ],
    revLinks: [
      { column: "countryId", table: "data" },
      { column: "CountryId", table: "COT" },
      { column: "country", table: "Seasonality" },
      { column: "country", table: "bond_values" },
    ],
  },
  {
    name: "indicators",
    columns: [
      { name: "Name", type: "string" },
      { name: "Description", type: "string" },
    ],
    revLinks: [{ column: "indicatorId", table: "data" }],
  },
  {
    name: "data",
    columns: [
      { name: "Date", type: "datetime" },
      { name: "countryId", type: "link", link: { table: "countries" } },
      { name: "indicatorId", type: "link", link: { table: "indicators" } },
      { name: "previous", type: "float" },
      { name: "forecast", type: "float" },
      { name: "actual", type: "float" },
      { name: "revised", type: "float" },
      { name: "importance", type: "text" },
    ],
  },
  {
    name: "COT",
    columns: [
      { name: "Date", type: "datetime", notNull: true, defaultValue: "now" },
      { name: "Long", type: "int" },
      { name: "Short", type: "int" },
      { name: "ChangeLong", type: "int" },
      { name: "ChangeShort", type: "int" },
      { name: "PercentLong", type: "float" },
      { name: "PercentShort", type: "float" },
      { name: "NetPosition", type: "int" },
      { name: "CountryId", type: "link", link: { table: "countries" } },
    ],
  },
  {
    name: "Retail",
    columns: [
      { name: "longPercentage", type: "int" },
      { name: "shortPercentage", type: "int" },
      { name: "Pair", type: "link", link: { table: "Pair" } },
    ],
  },
  {
    name: "Pair",
    columns: [{ name: "Pair", type: "text" }],
    revLinks: [
      { column: "Pair", table: "Retail" },
      { column: "Pair", table: "Score" },
    ],
  },
  {
    name: "Score",
    columns: [
      { name: "date", type: "datetime" },
      { name: "bias", type: "text" },
      { name: "score", type: "int" },
      { name: "Pair", type: "link", link: { table: "Pair" } },
    ],
  },
  {
    name: "Calendar",
    columns: [{ name: "Month", type: "text" }],
    revLinks: [{ column: "Month", table: "Seasonality" }],
  },
  {
    name: "Seasonality",
    columns: [
      { name: "country", type: "link", link: { table: "countries" } },
      { name: "Month", type: "link", link: { table: "Calendar" } },
      { name: "value", type: "float" },
    ],
  },
  {
    name: "bond",
    columns: [{ name: "bond", type: "text" }],
    revLinks: [{ column: "bond", table: "bond_values" }],
  },
  {
    name: "bond_values",
    columns: [
      { name: "yield", type: "float" },
      { name: "low", type: "float" },
      { name: "change", type: "float" },
      { name: "changePc", type: "float" },
      { name: "chg", type: "float" },
      { name: "bond", type: "link", link: { table: "bond" } },
      { name: "country", type: "link", link: { table: "countries" } },
      { name: "prev", type: "float" },
    ],
  },
  {
    name: "indices",
    columns: [{ name: "indices", type: "string" }],
    revLinks: [{ column: "indices", table: "indices_values" }],
  },
  {
    name: "indices_values",
    columns: [
      { name: "yield", type: "float" },
      { name: "prev", type: "float" },
      { name: "low", type: "float" },
      { name: "indices", type: "link", link: { table: "indices" } },
    ],
  },
  {
    name: "users",
    columns: [
      { name: "email", type: "email" },
      { name: "password", type: "text" },
      { name: "name", type: "text" },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = (0, client_1.buildClient)();
const defaultOptions = {
  databaseURL: "https://Paul-qh9fcg.us-east-1.xata.sh/db/MarketMoodDb",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
exports.XataClient = XataClient;
let instance = undefined;
/** @type { () => XataClient } */
const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
exports.getXataClient = getXataClient;
